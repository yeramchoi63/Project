<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd">

<security:http auto-config="true">
<security:csrf disabled="true"/>

<!-- 	<security:intercept-url pattern="/board/**" access="hasRole('ROLE_USER')"/> -->
	<security:intercept-url pattern="/board/modify_view" access="hasRole('ROLE_EMPLOYEE')"/>
	<security:intercept-url pattern="/member/**" access="permitAll"/>
	<security:intercept-url pattern="/" access="permitAll"/>
	
<security:form-login
	login-page="/login"
/>

<security:logout
	logout-success-url="/"
	invalidate-session="true"
/>

<security:session-management>
	<security:concurrency-control max-sessions="1" expired-url="/login"/>
</security:session-management>

</security:http>

<security:authentication-manager>
	<security:authentication-provider>
				<security:jdbc-user-service 
				data-source-ref="dataSource"
				users-by-username-query="select id, pwd, 1 enabled from membertable where id=?"
				authorities-by-username-query="select m.id, r.role_name from membertable m join role r on m.id=r.id where m.id=?"
				/>
	</security:authentication-provider>
</security:authentication-manager>

</beans>
